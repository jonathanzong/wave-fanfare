#N canvas 675 23 679 719 10;
#X declare -lib mrpeach;
#X floatatom 84 957 5 0 0 0 - - -;
#X obj 33 494 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 31 476 LED;
#X obj 148 962 print debug-msg;
#X obj 232 886 print unknown-message;
#X obj 181 915 tgl 15 1 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 148 938 spigot;
#X text 92 939 LED;
#N canvas 872 22 692 693 Arduino-server 0;
#X obj 49 186 inlet;
#X obj 121 963 outlet;
#X obj 137 216 inlet;
#X msg 325 293 devices;
#X msg 325 344 close;
#X text 179 562 comport opens the specified serial port at the specified
baud rate when it the object is initialized \; using an invalid device
prevents it from opening the port until requestd;
#X text 323 270 Click to print out the list of available serial devices.
;
#X text 324 325 Click to manually close the serial port.;
#X obj 138 278 list;
#X obj 20 9 cnv 15 800 120 empty empty Arduino_Server 20 12 0 12 -204800
-66577 0;
#X text 154 13 Subpatch to manage the messaging to and from the Arduino
OneInOneOutASCII sketch over a serial port.;
#X text 46 156 The left inlet receives Pd lists specifying messages.
;
#X msg 138 299 devicename \$1 \, baud 115200;
#X text 134 186 The middle inlet receives a message with a symbol naming
the serial port.;
#X obj 326 240 inlet;
#X text 321 219 The right inlet processes additional comport commands.
;
#X obj 50 578 comport 99 115200;
#X obj 206 856 t a;
#X obj 121 856 list prepend;
#X obj 83 728 t f f;
#X obj 121 896 spigot;
#X obj 83 763 sel 10;
#X obj 138 764 == 10;
#X obj 83 802 t b b;
#X obj 50 697 sel 13;
#X text 116 697 ignore carriage-return characters;
#X text 180 754 detect line-feed characters and trigger output of an
accumulated list of input characters;
#X text 234 857 list accumulator;
#X text 230 926 object from moocow to parse a list of input characters
into a Pd message;
#X text 149 796 two bangs: one to emit complete list \, one to reset
accumulator. Otherwise right outlet of sel just stores character.;
#X text 171 895 enable list to be emitted only when complete;
#X obj 121 931 moocow/bytes2any;
#X obj 51 395 moocow/any2bytes 80 13;
#X text 166 964 The outlet emits Pd messages;
#X text 195 392 Use the moocow library to convert an arbitrary Pd message
to an ASCII representation as a list of byte character values.;
#X text 117 655 The following graph buffers characters until a line
is received then parses it as a Pd list.;
#X connect 0 0 32 0;
#X connect 2 0 8 0;
#X connect 3 0 16 0;
#X connect 4 0 16 0;
#X connect 8 0 12 0;
#X connect 12 0 16 0;
#X connect 14 0 16 0;
#X connect 16 0 24 0;
#X connect 17 0 18 1;
#X connect 18 0 17 0;
#X connect 18 0 20 0;
#X connect 19 0 21 0;
#X connect 19 1 22 0;
#X connect 20 0 31 0;
#X connect 21 0 23 0;
#X connect 21 1 18 0;
#X connect 22 0 20 1;
#X connect 23 0 18 1;
#X connect 23 1 18 0;
#X connect 24 1 19 0;
#X connect 31 0 1 0;
#X connect 32 0 16 0;
#X restore 84 804 pd Arduino-server;
#X msg 28 251 /dev/tty.usbmodem1411;
#X obj 169 771 r port-name;
#X obj 28 303 s port-name;
#X obj 84 771 r port-output;
#X obj 33 543 s port-output;
#X obj 116 693 tgl 15 1 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 83 716 spigot;
#X obj 83 740 print port-output;
#X obj 83 672 r port-output;
#X text 165 251 Arduino Uno on MacBook Air right-side USB port;
#X text 164 279 Arduino Uno on Raspberry Pi;
#X obj 22 1 cnv 15 600 120 empty empty OneInOneOutAsciiTest 20 12 0
14 -204800 -66577 0;
#X msg 33 517 led \$1;
#X text 215 4 Demonstration of communicating with an Arduino Uno running
the OneInOneOutASCII skech. Messages are sent bidirectionally over
the serial port using a plain text protocol.;
#X obj 22 130 cnv 15 400 80 empty empty empty 20 12 0 14 -262130 -66577
0;
#X text 216 66 Note that the Arduino communication requires the moocow
and comport libraries which are not by default included in vanilla
Pd \, so Pd-extended is recommended.;
#X text 162 222 Typical serial port name under Windows.;
#X msg 433 159 close;
#X obj 432 187 s port-commands;
#X msg 431 134 devices;
#X text 486 159 Close the serial port.;
#X text 37 136 Choose the appropriate serial port below to connect
to the Arduino \, or edit a message to set the Arduino serial port
defined on your particular machine. If you're not sure of the device
name format \, the [devices( button to the right will print known device
names to the console.;
#X obj 245 771 r port-commands;
#X text 486 129 Print a list of serial ports;
#X text 485 140 on the console.;
#X text 138 692 Enable showing output messages;
#X text 197 801 This subpatch encapsulates the serial port protocol
for sending and receiving messages to and from the Arduino.;
#X obj 81 852 route led dbg;
#X obj 300 341 import mrpeach;
#X obj 300 374 udpreceive 54321;
#X obj 301 408 unpackOSC;
#X obj 301 442 routeOSC /led;
#X connect 1 0 21 0;
#X connect 5 0 6 1;
#X connect 6 0 3 0;
#X connect 8 0 36 0;
#X connect 9 0 11 0;
#X connect 10 0 8 1;
#X connect 12 0 8 0;
#X connect 14 0 15 1;
#X connect 15 0 16 0;
#X connect 17 0 15 0;
#X connect 21 0 13 0;
#X connect 26 0 27 0;
#X connect 28 0 27 0;
#X connect 31 0 8 2;
#X connect 36 0 0 0;
#X connect 36 1 6 0;
#X connect 36 2 4 0;
#X connect 38 0 39 0;
#X connect 39 0 40 0;
#X connect 40 0 1 0;
